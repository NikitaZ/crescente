<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="https://jakarta.ee/xml/ns/jakartaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee https://jakarta.ee/xml/ns/jakartaee/web-app_5_0.xsd"
         version="5.0">
    <display-name>Sample JSF application</display-name>

    <context-param>
        <param-name>jakarta.faces.STATE_SAVING_METHOD</param-name>
        <param-value>client</param-value>
<!--    consumes memory on the server -->
<!--        <param-value>server</param-value>-->
    </context-param>


<!--  not crucial, but why won't we keep it ? -->
    <context-param>
        <param-name>jakarta.faces.DEFAULT_SUFFIX</param-name>
        <param-value>.xhtml</param-value>
    </context-param>
<!--  not crucial, but why won't we keep it ? -->
    <context-param>
        <param-name>jakarta.faces.FACELETS_SKIP_COMMENTS</param-name>
        <param-value>true</param-value>
    </context-param>

<!--    not needed now, but might be useful, we need to google it -->
<!--    <context-param>-->
<!--        <param-name>jakarta.faces.ENABLE_WEBSOCKET_ENDPOINT</param-name>-->
<!--        <param-value>true</param-value>-->
<!--    </context-param>-->

<!--     Thats how Service bean works  -->
    <context-param>
        <param-name>jakarta.faces.PROJECT_STAGE</param-name>
<!--        Set in the pom file - a property on a maven profile -->
        <param-value>${jsfProjectStage}</param-value>
<!--        <param-value>Development</param-value>-->
<!--        <param-value>Production</param-value>-->
    </context-param>

    <servlet>
        <servlet-name>Faces Servlet</servlet-name>
        <servlet-class>jakarta.faces.webapp.FacesServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>Faces Servlet</servlet-name>
        <url-pattern>/faces/*</url-pattern>
        <!--        I don't like the below as user than sticks to all links w/o "/faces/" and
                    requestContextPath breaks, see UserAuthenticationPhaseListener.java -->
        <!--        <url-pattern>*.xhtml</url-pattern> &lt;!&ndash; also prevents access to JSF pages source &ndash;&gt;-->
        <!--        so we use restriction rules instead -->
    </servlet-mapping>


<!--    I was thinking this is important but it seems not to make any difference -->
    <!--    this is not really necessary, see
    https://eclipse-ee4j.github.io/jersey.github.io/documentation/latest/deployment.html#deployment.servlet.3
      but provides a way say to override @ApplicationPath("/api")-->

<!--&lt;!&ndash; otherwise rest api is at  /faces/api/ i.e. &ndash;&gt;-->
<!--&lt;!&ndash;    http://localhost:8080/mydemofullweb-1.0-SNAPSHOT/faces/api/hello-world &ndash;&gt;-->
<!--    <servlet>-->
<!--        <servlet-name>com.example.mydemofullweb.web.service.HelloApplication</servlet-name>-->
<!--    </servlet>-->
<!--    <servlet-mapping>-->
<!--        <servlet-name>com.example.mydemofullweb.web.service.HelloApplication</servlet-name>-->
<!--        <url-pattern>/api/*</url-pattern>-->
<!--    </servlet-mapping>-->

    <welcome-file-list>
        <welcome-file>faces/About.xhtml</welcome-file>
        <!-- take a look at this file :), it seems to forward to faces/Documents.xhtml via html headers -->
        <!--        <welcome-file>index.html</welcome-file>-->
        <!--        <welcome-file>/</welcome-file>-->
    </welcome-file-list>

<!--    default was 30 minutes ! -->
    <session-config>
        <!--        two days    -->
        <session-timeout>5760</session-timeout>
    </session-config>

<!--    TODO-->

    <!--    Prohibit access to /resources so that composite components code won't be accessible.-->
<!--    <security-constraint>-->
<!--        <web-resource-collection>-->
<!--            <web-resource-name>resources</web-resource-name>-->
<!--            <description>The resources directory</description>-->
<!--            <url-pattern>/resources/*</url-pattern>-->
<!--        </web-resource-collection>-->
<!--        <auth-constraint/>-->
<!--    </security-constraint>-->
<!--    <security-constraint>-->
<!--        <display-name>No access to Facelets source</display-name>-->
<!--        <web-resource-collection>-->
<!--            <web-resource-name>XHTML</web-resource-name>-->
<!--            <url-pattern>*.xhtml</url-pattern>-->
<!--        </web-resource-collection>-->
<!--        <auth-constraint/>-->
<!--    </security-constraint>-->

    <!--    main security constraint which activates google login (openID authentication & authorisation) -->
<!--    <security-constraint>-->
<!--        <web-resource-collection>-->
<!--            <web-resource-name>All Pages Secured</web-resource-name>-->
<!--            <url-pattern>/faces/*</url-pattern>-->
<!--        </web-resource-collection>-->
<!--        <auth-constraint>-->
<!--            &lt;!&ndash;            <role-name>all</role-name>&ndash;&gt;-->
<!--            &lt;!&ndash;             * seems to mean no auth constraint only if no roles are defined,-->
<!--             otherwise it means any role while ** means 'any role' in any case &ndash;&gt;-->
<!--            <role-name>**</role-name> &lt;!&ndash; require user to be authenticated, a trick from JSF and JavaEE8 book &ndash;&gt;-->
<!--        </auth-constraint>-->
<!--    </security-constraint>-->

    <!--    the landing page of redirectURI should be unsecured unless we end up with endless google authentication -->
<!--    <security-constraint>-->
<!--        <web-resource-collection>-->
<!--            <web-resource-name>First Page</web-resource-name>-->
<!--            <url-pattern>/faces/Documents.xhtml</url-pattern>-->
<!--        </web-resource-collection>-->
<!--        &lt;!&ndash;        wow! no auth-constraint means no authentication required, see-->
<!--         https://docs.oracle.com/javaee/7/tutorial/security-webtier002.htm#GJJCG-->
<!--          &ndash;&gt;-->
<!--        &lt;!&ndash;        <auth-constraint>&ndash;&gt;-->
<!--        &lt;!&ndash;   I thought          * seems to mean no auth constraint while ** means 'any role' &ndash;&gt;-->
<!--        &lt;!&ndash;             no. when a role is defined it seems to work as **, i.e. requires authentication &ndash;&gt;-->
<!--        &lt;!&ndash;            <role-name>*</role-name>&ndash;&gt;-->
<!--        &lt;!&ndash;        </auth-constraint>&ndash;&gt;-->
<!--    </security-constraint>-->

<!--    <security-constraint>-->
<!--        <web-resource-collection>-->
<!--            <web-resource-name>Admin Pages</web-resource-name>-->
<!--            <url-pattern>/faces/Users.xhtml</url-pattern>-->
<!--        </web-resource-collection>-->
<!--        <auth-constraint>-->
<!--            <role-name>admin</role-name>-->
<!--        </auth-constraint>-->
<!--    </security-constraint>-->
<!--    &lt;!&ndash;  our usual three roles &ndash;&gt;-->
<!--    <security-role>-->
<!--        <role-name>admin</role-name>-->
<!--    </security-role>-->
<!--    <security-role>-->
<!--        <role-name>test</role-name>-->
<!--    </security-role>-->
<!--    <security-role>-->
<!--        <role-name>support</role-name>-->
<!--    </security-role>-->
</web-app>