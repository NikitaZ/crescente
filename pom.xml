<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>su.ioffe</groupId>
    <artifactId>crescente</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>crescente</name>
    <packaging>war</packaging>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.target>23</maven.compiler.target>
        <maven.compiler.source>23</maven.compiler.source>
        <junit.version>5.11.4</junit.version>
    </properties>
    <profiles>
        <profile>
            <id>development</id>
            <properties>
                <jsfProjectStage>Development</jsfProjectStage>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>production</id>
            <properties>
                <jsfProjectStage>Production</jsfProjectStage>
            </properties>
        </profile>
    </profiles>
    <dependencies>
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-api</artifactId>
            <version>11.0.0-M4</version>
            <scope>provided</scope>
        </dependency>
<!--        TODO: learn this technology maybe sometimes it is more suitable than JSF,
        commented out as it is not used in the project yet, might be part of jakarta 10-11 already-->
<!--        <dependency>-->
<!--            <groupId>jakarta.mvc</groupId>-->
<!--            <artifactId>jakarta.mvc-api</artifactId>-->
<!--            <version>2.1.0</version>-->
<!--        should it be <scope>provided</scope> as well? -->
<!--&lt;!&ndash;            This one is currently not used, but is a promising tech, 2.1.0 is for Jakarta 10, need to upgrade -->
<!--            to 3.0 at some point (Jakarta 11) which is still under development and is not on Maven Central yet&ndash;&gt;-->
<!--        </dependency>-->

<!--        It seems to be working w/o this -->
<!--        TODO check what changed recently -->
<!--        https://central.sonatype.com/namespace/jakarta.xml.ws -->
<!--        <dependency>-->
<!--            <groupId>jakarta.xml.ws</groupId>-->
<!--            <artifactId>jakarta.xml.ws-api</artifactId>-->
<!--            <version>4.0.2</version>-->
<!--            <scope>provided</scope>-->
<!--        </dependency>-->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
<!--        In case we need ResourceConfig class for rest applications -->
<!--        <dependency>-->
<!--            <groupId>org.glassfish.jersey.containers</groupId>-->
<!--            <artifactId>jersey-container-servlet</artifactId>-->
<!--            <version>3.0.3</version>-->
<!--            <scope>provided</scope>-->
<!--        </dependency>-->
<!--        h2 is 'provided' in glassfish/modules, but we may need it (always) for unit tests -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>2.3.232</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
<!--                https://central.sonatype.com/artifact/org.apache.maven.plugins/maven-war-plugin-->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
<!--                todo what changed since 3.3.2? -->
                <version>3.4.0</version>
                <configuration>
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>gif</nonFilteredFileExtension>
                        <nonFilteredFileExtension>png</nonFilteredFileExtension>
                        <nonFilteredFileExtension>jpg</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                    <webResources>
                        <resource>
                            <directory>src/main/webapp</directory>
                            <filtering>true</filtering>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>